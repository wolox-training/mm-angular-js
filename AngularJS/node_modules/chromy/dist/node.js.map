{"version":3,"sources":["../src/node.js"],"names":["module","exports","client","nodeId","dom","DOM","_remoteObject","name","value","setAttributeValue","fn","expr","getRemoteObject","object","fnDecl","toString","params","objectId","functionDeclaration","Runtime","callFunctionOn","resolveNode"],"mappings":";;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP;AACE,sBAAaC,MAAb,EAAqBC,MAArB,EAA6B;AAAA;;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,GAAL,GAAWF,OAAOG,GAAlB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,aAAL,GAAoB,IAApB;AACD;;AANH;AAAA;AAAA,sCAU2BC,IAV3B,EAUiCC,KAVjC;AAAA;AAAA;AAAA;AAAA;AAAA,+CAWW,KAAKJ,GAAL,CAASK,iBAAT,CAA2B,EAACN,QAAQ,KAAKA,MAAd,EAAsBI,UAAtB,EAA4BC,YAA5B,EAA3B,CAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAakBE,EAblB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAcQC,kBAdR,GAceD,EAdf;;AAeI,kBAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC5BC,uBAAO,YAAYA,IAAZ,GAAmB,GAA1B;AACD;AAjBL;AAAA,iDAkB2B,KAAKC,eAAL,EAlB3B;;AAAA;AAAA;AAkBWC,oBAlBX,QAkBWA,MAlBX;AAmBUC,oBAnBV,GAmBmB,2BAA2BH,KAAKI,QAAL,EAA3B,GAA6C,OAnBhE;AAoBUC,oBApBV,GAoBmB,EAACC,UAAUJ,OAAOI,QAAlB,EAA4BC,qBAAqBJ,MAAjD,EApBnB;AAAA,gDAqBW,KAAKZ,MAAL,CAAYiB,OAAZ,CAAoBC,cAApB,CAAmCJ,MAAnC,CArBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAwBQ,KAAKV,aAxBb;AAAA;AAAA;AAAA;;AAAA,gDAyBa,KAAKA,aAzBlB;;AAAA;AAAA;AAAA,iDA2B+B,KAAKJ,MAAL,CAAYG,GAAZ,CAAgBgB,WAAhB,CAA4B,EAAClB,QAAQ,KAAKA,MAAd,EAA5B,CA3B/B;;AAAA;AA2BI,mBAAKG,aA3BT;AAAA,gDA4BW,KAAKA,aA5BhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOY;AACR,aAAO,KAAKH,MAAZ;AACD;AATH;AAAA;AAAA","file":"node.js","sourcesContent":["module.exports = class ChromyNode {\n  constructor (client, nodeId) {\n    this.client = client\n    this.dom = client.DOM\n    this.nodeId = nodeId\n    this._remoteObject= null\n  }\n  get id () {\n    return this.nodeId\n  }\n  async setAttributeValue (name, value) {\n    return this.dom.setAttributeValue({nodeId: this.nodeId, name, value})\n  }\n  async evaluate (fn) {\n    let expr = fn\n    if (typeof fn !== 'function') {\n      expr = '() => {' + expr + '}'\n    }\n    const {object} = await this.getRemoteObject()\n    const fnDecl = 'function () { return (' + expr.toString() + ')() }'\n    const params = {objectId: object.objectId, functionDeclaration: fnDecl}\n    return this.client.Runtime.callFunctionOn(params)\n  }\n  async getRemoteObject () {\n    if (this._remoteObject) {\n      return this._remoteObject\n    }\n    this._remoteObject = await this.client.DOM.resolveNode({nodeId: this.nodeId})\n    return this._remoteObject\n  }\n}\n\n"]}