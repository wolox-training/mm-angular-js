{"version":3,"sources":["../src/dom.js"],"names":["ChromyNode","require","module","exports","client","nodeId","dom","DOM","selector","params","querySelector","resultNodeId","getDocument","doc","root","querySelectorAll","resultNodeIds","nodeIds","length","map","nid"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,aAAaC,QAAQ,QAAR,CAAnB;;AAEAC,OAAOC,OAAP;AACE,qBAAaC,MAAb,EAAoC;AAAA,QAAfC,MAAe,uEAAN,IAAM;AAAA;;AAClC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,GAAL,GAAWF,OAAOG,GAAlB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACD;;AALH;AAAA;AAAA,kCAMuBG,QANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAOUC,oBAPV,GAOmB,EAACD,kBAAD,EAPnB;;AAQI,kBAAI,KAAKH,MAAT,EAAiB;AACfI,uBAAOJ,MAAP,GAAgBA,MAAhB;AACD;AAVL;AAAA,iDAW+B,KAAKC,GAAL,CAASI,aAAT,CAAuBD,MAAvB,CAX/B;;AAAA;AAWUE,0BAXV;;AAAA,mBAYQA,YAZR;AAAA;AAAA;AAAA;;AAAA,+CAaa,IAAIX,UAAJ,CAAe,KAAKI,MAApB,EAA4BO,YAA5B,CAbb;;AAAA;AAAA,+CAea,IAfb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAkB0BH,QAlB1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBUC,oBAnBV,GAmBmB,EAACD,kBAAD,EAnBnB;;AAAA,mBAoBQ,KAAKH,MApBb;AAAA;AAAA;AAAA;;AAqBMI,qBAAOJ,MAAP,GAAgBA,MAAhB;AArBN;AAAA;;AAAA;AAAA;AAAA,iDAuBwB,KAAKC,GAAL,CAASM,WAAT,EAvBxB;;AAAA;AAuBYC,iBAvBZ;;AAwBMJ,qBAAOJ,MAAP,GAAgBQ,IAAIC,IAAJ,CAAST,MAAzB;;AAxBN;AAAA;AAAA,iDA0BgC,KAAKC,GAAL,CAASS,gBAAT,CAA0BN,MAA1B,CA1BhC;;AAAA;AA0BUO,2BA1BV;;AAAA,oBA2BQA,cAAcC,OAAd,CAAsBC,MAAtB,KAAiC,CA3BzC;AAAA;AAAA;AAAA;;AAAA,gDA4Ba,EA5Bb;;AAAA;AAAA,gDA8BaF,cAAcC,OAAd,CAAsBE,GAAtB,CAA0B,eAAO;AACtC,uBAAO,IAAInB,UAAJ,CAAe,MAAKI,MAApB,EAA4BgB,GAA5B,CAAP;AACD,eAFM,CA9Bb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"dom.js","sourcesContent":["const ChromyNode = require('./node')\n\nmodule.exports = class ChromyDOM {\n  constructor (client, nodeId = null) {\n    this.client = client\n    this.dom = client.DOM\n    this.nodeId = nodeId\n  }\n  async querySelector (selector) {\n    const params = {selector}\n    if (this.nodeId) {\n      params.nodeId = nodeId\n    }\n    const resultNodeId = await this.dom.querySelector(params)\n    if (resultNodeId) {\n      return new ChromyNode(this.client, resultNodeId)\n    } else {\n      return null\n    }\n  }\n  async querySelectorAll (selector) {\n    const params = {selector}\n    if (this.nodeId) {\n      params.nodeId = nodeId\n    } else {\n      const doc = await this.dom.getDocument()\n      params.nodeId = doc.root.nodeId\n    }\n    const resultNodeIds = await this.dom.querySelectorAll(params)\n    if (resultNodeIds.nodeIds.length === 0) {\n      return []\n    } else {\n      return resultNodeIds.nodeIds.map(nid => {\n        return new ChromyNode(this.client, nid)\n      })\n    }\n  }\n}\n\n"]}